{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/authorcreate/authorcreate.component.css","webpack:///./src/app/components/authorcreate/authorcreate.component.html","webpack:///./src/app/components/authorcreate/authorcreate.component.ts","webpack:///./src/app/components/authoreditor/authoreditor.component.css","webpack:///./src/app/components/authoreditor/authoreditor.component.html","webpack:///./src/app/components/authoreditor/authoreditor.component.ts","webpack:///./src/app/components/authoroverview/authoroverview.component.css","webpack:///./src/app/components/authoroverview/authoroverview.component.html","webpack:///./src/app/components/authoroverview/authoroverview.component.ts","webpack:///./src/app/components/book/book.component.css","webpack:///./src/app/components/book/book.component.html","webpack:///./src/app/components/book/book.component.ts","webpack:///./src/app/components/bookeditor/bookeditor.component.css","webpack:///./src/app/components/bookeditor/bookeditor.component.html","webpack:///./src/app/components/bookeditor/bookeditor.component.ts","webpack:///./src/app/components/bookoverview/bookoverview.component.css","webpack:///./src/app/components/bookoverview/bookoverview.component.html","webpack:///./src/app/components/bookoverview/bookoverview.component.ts","webpack:///./src/app/components/footer/footer.component.css","webpack:///./src/app/components/footer/footer.component.html","webpack:///./src/app/components/footer/footer.component.ts","webpack:///./src/app/components/header/header.component.css","webpack:///./src/app/components/header/header.component.html","webpack:///./src/app/components/header/header.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/pubcreate/pubcreate.component.css","webpack:///./src/app/components/pubcreate/pubcreate.component.html","webpack:///./src/app/components/pubcreate/pubcreate.component.ts","webpack:///./src/app/components/pubedit/pubedit.component.css","webpack:///./src/app/components/pubedit/pubedit.component.html","webpack:///./src/app/components/pubedit/pubedit.component.ts","webpack:///./src/app/components/pubview/pubview.component.css","webpack:///./src/app/components/pubview/pubview.component.html","webpack:///./src/app/components/pubview/pubview.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/components/userdetail/userdetail.component.css","webpack:///./src/app/components/userdetail/userdetail.component.html","webpack:///./src/app/components/userdetail/userdetail.component.ts","webpack:///./src/app/login/login.guard.ts","webpack:///./src/app/material-module.ts","webpack:///./src/app/services/author.service.ts","webpack:///./src/app/services/book.service.ts","webpack:///./src/app/services/login.service.ts","webpack:///./src/app/services/publisher.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginGuard } from './login/login.guard';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\n\nimport { UserdetailComponent } from './components/userdetail/userdetail.component';\n\nimport { BookComponent } from './components/book/book.component';\nimport { BookoverviewComponent } from './components/bookoverview/bookoverview.component';\nimport { BookeditorComponent } from './components/bookeditor/bookeditor.component';\n\nimport { AuthoroverviewComponent } from './components/authoroverview/authoroverview.component';\nimport { AuthoreditorComponent } from './components/authoreditor/authoreditor.component';\nimport { AuthorcreateComponent } from './components/authorcreate/authorcreate.component';\n\nimport { PubviewComponent } from './components/pubview/pubview.component';\nimport { PubeditComponent } from './components/pubedit/pubedit.component';\nimport { PubcreateComponent } from './components/pubcreate/pubcreate.component';\n\n\nconst routes: Routes = [\n  { path: 'home', component: HomeComponent },\n  { path: 'login', component: LoginComponent},\n  { path: 'register', component: RegisterComponent},\n  { path: 'book/:id', component: BookComponent },\n  // Requires login\n  { path: 'userdetails', component: UserdetailComponent, canActivate: [LoginGuard]},\n  { path: 'bookschema', component: BookoverviewComponent, canActivate: [LoginGuard]},\n  { path: 'authorschema', component: AuthoroverviewComponent, canActivate: [LoginGuard]},\n  { path: 'publisherschema', component: PubviewComponent, canActivate: [LoginGuard]},\n  { path: 'bookedit/:id', component: BookeditorComponent, canActivate: [LoginGuard]},\n  { path: 'authoredit/:id', component: AuthoreditorComponent, canActivate: [LoginGuard]},\n  { path: 'publisheredit/:id', component: PubeditComponent, canActivate: [LoginGuard]},\n  { path: 'authorcreate', component: AuthorcreateComponent, canActivate: [LoginGuard]},\n  { path: 'publishercreate', component: PubcreateComponent, canActivate: [LoginGuard]},\n  // When path does not exist.\n  { path: '', redirectTo: 'home', pathMatch: 'full'},\n  { path: '**', redirectTo: 'home', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n  <app-footer></app-footer>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'WebCatalog';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatButtonModule, MatCheckboxModule} from '@angular/material';\nimport {MaterialModule} from './material-module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule }    from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { UserdetailComponent } from './components/userdetail/userdetail.component';\nimport { LoginGuard } from './login/login.guard';\nimport { BookComponent } from './components/book/book.component';\nimport { BookoverviewComponent } from './components/bookoverview/bookoverview.component';\nimport { BookeditorComponent } from './components/bookeditor/bookeditor.component';\n\nimport { AuthoroverviewComponent } from './components/authoroverview/authoroverview.component';\nimport { AuthoreditorComponent } from './components/authoreditor/authoreditor.component';\nimport { AuthorcreateComponent } from './components/authorcreate/authorcreate.component';\n\nimport { PubviewComponent } from './components/pubview/pubview.component';\nimport { PubeditComponent } from './components/pubedit/pubedit.component';\nimport { PubcreateComponent } from './components/pubcreate/pubcreate.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    HomeComponent,\n    FooterComponent,\n    LoginComponent,\n    RegisterComponent,\n    UserdetailComponent,\n    BookComponent,\n    BookoverviewComponent,\n    BookeditorComponent,\n    AuthoroverviewComponent,\n    AuthoreditorComponent,\n    AuthorcreateComponent,\n    PubviewComponent,\n    PubeditComponent,\n    PubcreateComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    ReactiveFormsModule, \n    NgbModule,\n    MaterialModule,\n    BrowserAnimationsModule,\n    MatButtonModule, \n    MatCheckboxModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [LoginGuard],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n","module.exports = \"mat-card {\\r\\n    flex-direction: column;\\r\\n    width: 100%;\\r\\n    margin-bottom: 50px;\\r\\n    box-sizing: border-box;\\r\\n  }\\r\\n  \\r\\n  mat-card > * {\\r\\n    width: 100%;\\r\\n    box-sizing: border-box;\\r\\n  }\\r\\n  \\r\\n  mat-grid-tile {\\r\\n    width: calc(50% - 25px) !important;\\r\\n  }\\r\\n  \\r\\n  mat-grid-tile:nth-child(2) {\\r\\n    left: calc(50% + 25px) !important;\\r\\n  }\\r\\n  \\r\\n  mat-grid-tile > * {\\r\\n    width: 100%;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hdXRob3JjcmVhdGUvYXV0aG9yY3JlYXRlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxzQkFBc0I7SUFDdEIsV0FBVztJQUNYLG1CQUFtQjtJQUNuQixzQkFBc0I7RUFDeEI7O0VBRUE7SUFDRSxXQUFXO0lBQ1gsc0JBQXNCO0VBQ3hCOztFQUVBO0lBQ0Usa0NBQWtDO0VBQ3BDOztFQUVBO0lBQ0UsaUNBQWlDO0VBQ25DOztFQUVBO0lBQ0UsV0FBVztFQUNiIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9hdXRob3JjcmVhdGUvYXV0aG9yY3JlYXRlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtY2FyZCB7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA1MHB4O1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICB9XHJcbiAgXHJcbiAgbWF0LWNhcmQgPiAqIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICB9XHJcblxyXG4gIG1hdC1ncmlkLXRpbGUge1xyXG4gICAgd2lkdGg6IGNhbGMoNTAlIC0gMjVweCkgIWltcG9ydGFudDtcclxuICB9XHJcblxyXG4gIG1hdC1ncmlkLXRpbGU6bnRoLWNoaWxkKDIpIHtcclxuICAgIGxlZnQ6IGNhbGMoNTAlICsgMjVweCkgIWltcG9ydGFudDtcclxuICB9XHJcblxyXG4gIG1hdC1ncmlkLXRpbGUgPiAqIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH0iXX0= */\"","module.exports = \"<app-header></app-header>\\n<mat-card>\\n  <h2>Create a new artist</h2>\\n  <p *ngIf=\\\"errorMessage\\\" class=\\\"errMsg\\\">{{errorMessage}}</p>\\n  <p *ngIf=\\\"successMessage\\\" class=\\\"successMsg\\\">{{successMessage}}</p>\\n  <mat-form-field>\\n    <input [formControl]=\\\"nameFormControl\\\" matInput name=\\\"name\\\" [(ngModel)]=\\\"name\\\" placeholder=\\\"Name\\\" required>\\n    <mat-error *ngIf=\\\"nameFormControl.hasError('required')\\\">\\n        Name is <strong>required</strong>\\n      </mat-error>\\n  </mat-form-field>\\n  <mat-form-field>\\n    <input [formControl]=\\\"bioFormControl\\\" matInput name=\\\"bio\\\" [(ngModel)]=\\\"bio\\\" placeholder=\\\"bio\\\"  required>\\n    <mat-error *ngIf=\\\"bioFormControl.hasError('required')\\\">\\n        bio is <strong>required</strong>\\n      </mat-error>\\n  </mat-form-field>\\n  <mat-form-field>\\n    <input [formControl]=\\\"countryFormControl\\\" matInput name=\\\"country\\\" [(ngModel)]=\\\"country\\\" placeholder=\\\"country\\\" required>\\n    <mat-error *ngIf=\\\"countryFormControl.hasError('required')\\\">\\n      country is <strong>required</strong>\\n      </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <input [formControl]=\\\"birthyearFormControl\\\" matInput name=\\\"birthyear\\\" [(ngModel)]=\\\"birthyear\\\" placeholder=\\\"birthyear\\\" required>\\n    <mat-error *ngIf=\\\"birthyearFormControl.hasError('required')\\\">\\n      birthyear is <strong>required</strong>\\n      </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <input [formControl]=\\\"imgUriFormControl\\\" matInput name=\\\"imgUri\\\" [(ngModel)]=\\\"imgUri\\\" placeholder=\\\"Image Uri\\\" required>\\n    <mat-error *ngIf=\\\"imgUriFormControl.hasError('pattern') && !imgUrlFormControl.hasError('required')\\\">\\n        Please enter a valid Image URI (example: 'http://example.com/i/img.png').\\n      </mat-error>\\n      <mat-error *ngIf=\\\"imgUriFormControl.hasError('required')\\\">\\n        Image URI is <strong>required</strong>\\n      </mat-error>\\n  </mat-form-field>\\n  <button mat-flat-button (click)=\\\"createAuthor()\\\" color=\\\"primary\\\">Create Author</button>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthorService } from 'src/app/services/author.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-authorcreate',\n  templateUrl: './authorcreate.component.html',\n  styleUrls: ['./authorcreate.component.css']\n})\nexport class AuthorcreateComponent implements OnInit {\n\n  name:string;\n  country: string;\n  bio: string;\n  birthyear: string;\n  imgUri:string;\n\n  currentUser: any;\n  errorMessage: String;\n  successMessage: String;\n\n  nameFormControl = new FormControl('', [\n    Validators.required\n  ]);\n\n  bioFormControl = new FormControl('', [\n    Validators.required\n  ]);\n\n  countryFormControl = new FormControl('', [\n    Validators.required\n  ]);\n\n  birthyearFormControl = new FormControl('', [\n    Validators.required\n  ]);\n\n  imgUriFormControl = new FormControl('', [\n    Validators.pattern(/^(http[s]?:\\/\\/){0,1}(www\\.){0,1}[a-zA-Z0-9\\.\\-]+\\.[a-zA-Z]{2,5}[\\.]{0,1}/)\n  ]);\n\n  constructor(\n    private router: Router,\n    private authorService: AuthorService\n  ) { \n    this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\n  }\n\n  ngOnInit() {\n  }\n\n  createAuthor() {\n    this.authorService.createAuthor(this.currentUser.token, this.name, this.country, this.bio, this.birthyear, this.imgUri)\n    .subscribe(\n      data => {\n        this.router.navigate(['authorschema']);\n      },\n      error => {\n        this.errorMessage = \"Fatal error occured, author could not be created\";\n        this.successMessage = null;\n    });\n  }\n\n}\n","module.exports = \"mat-card {\\r\\n    flex-direction: column;\\r\\n    width: 100%;\\r\\n    margin-bottom: 50px;\\r\\n    box-sizing: border-box;\\r\\n  }\\r\\n  \\r\\n  mat-card > * {\\r\\n    width: 100%;\\r\\n    box-sizing: border-box;\\r\\n  }\\r\\n  \\r\\n  mat-grid-tile {\\r\\n    width: calc(50% - 25px) !important;\\r\\n  }\\r\\n  \\r\\n  mat-grid-tile:nth-child(2) {\\r\\n    left: calc(50% + 25px) !important;\\r\\n  }\\r\\n  \\r\\n  mat-grid-tile > * {\\r\\n    width: 100%;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hdXRob3JlZGl0b3IvYXV0aG9yZWRpdG9yLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxzQkFBc0I7SUFDdEIsV0FBVztJQUNYLG1CQUFtQjtJQUNuQixzQkFBc0I7RUFDeEI7O0VBRUE7SUFDRSxXQUFXO0lBQ1gsc0JBQXNCO0VBQ3hCOztFQUVBO0lBQ0Usa0NBQWtDO0VBQ3BDOztFQUVBO0lBQ0UsaUNBQWlDO0VBQ25DOztFQUVBO0lBQ0UsV0FBVztFQUNiIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9hdXRob3JlZGl0b3IvYXV0aG9yZWRpdG9yLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtY2FyZCB7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA1MHB4O1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICB9XHJcbiAgXHJcbiAgbWF0LWNhcmQgPiAqIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICB9XHJcblxyXG4gIG1hdC1ncmlkLXRpbGUge1xyXG4gICAgd2lkdGg6IGNhbGMoNTAlIC0gMjVweCkgIWltcG9ydGFudDtcclxuICB9XHJcblxyXG4gIG1hdC1ncmlkLXRpbGU6bnRoLWNoaWxkKDIpIHtcclxuICAgIGxlZnQ6IGNhbGMoNTAlICsgMjVweCkgIWltcG9ydGFudDtcclxuICB9XHJcblxyXG4gIG1hdC1ncmlkLXRpbGUgPiAqIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH0iXX0= */\"","module.exports = \"<app-header></app-header>\\n<mat-card>\\n  <h2>{{name}}</h2>\\n  <p *ngIf=\\\"errorMessage\\\" class=\\\"errMsg\\\">{{errorMessage}}</p>\\n  <p *ngIf=\\\"successMessage\\\" class=\\\"successMsg\\\">{{successMessage}}</p>\\n  <mat-form-field>\\n    <input [formControl]=\\\"nameFormControl\\\" matInput name=\\\"name\\\" [(ngModel)]=\\\"name\\\" value=\\\"{{name}}\\\" required>\\n    <mat-error *ngIf=\\\"nameFormControl.hasError('required')\\\">\\n        Name is <strong>required</strong>\\n      </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <input [formControl]=\\\"bioFormControl\\\" matInput name=\\\"bio\\\" [(ngModel)]=\\\"bio\\\" value=\\\"{{bio}}\\\"  required>\\n    <mat-error *ngIf=\\\"bioFormControl.hasError('required')\\\">\\n        Bio is <strong>required</strong>\\n      </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <input matInput [formControl]=\\\"countryFormControl\\\" name=\\\"country\\\" [(ngModel)]=\\\"country\\\" value=\\\"{{country}}\\\" required>\\n    <mat-error *ngIf=\\\"countryFormControl.hasError('required')\\\">\\n        Genre is <strong>required</strong>\\n      </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <input matInput [formControl]=\\\"birthyearFormControl\\\" name=\\\"birthyear\\\" [(ngModel)]=\\\"birthyear\\\" value=\\\"{{birthyear}}\\\" required>\\n    <mat-error *ngIf=\\\"countryFormControl.hasError('required')\\\">\\n      birthyear is <strong>required</strong>\\n      </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <input matInput [formControl]=\\\"imgUriFormControl\\\" name=\\\"imgUri\\\" [(ngModel)]=\\\"imgUri\\\" value=\\\"{{imgUri}}\\\" required>\\n    <mat-error *ngIf=\\\"imgUriFormControl.hasError('pattern') && !imgUriFormControl.hasError('required')\\\">\\n        Please enter a valid Image URI (example: 'http://example.com/i/ex.png').\\n      </mat-error>\\n      <mat-error *ngIf=\\\"imgUriFormControl.hasError('required')\\\">\\n        Image URI is <strong>required</strong>\\n      </mat-error>\\n  </mat-form-field>\\n  \\n  <button mat-flat-button (click)=\\\"editAuthor()\\\" color=\\\"primary\\\">Edit Author</button>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthorService } from 'src/app/services/author.service';\nimport { Author } from 'src/app/models/Author';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-authoreditor',\n  templateUrl: './authoreditor.component.html',\n  styleUrls: ['./authoreditor.component.css']\n})\nexport class AuthoreditorComponent implements OnInit {\n\n  name:string;\n  bio: string;\n  birthyear:string;\n  country:string;\n  imgUri:string;\n  author: Author;\n  id: string;\n\n  currentUser: any;\n  errorMessage: String;\n  successMessage: String;\n\n  nameFormControl = new FormControl('', [\n    Validators.required\n  ]);\n\n  bioFormControl = new FormControl('', [\n    Validators.required\n  ]);\n\n  birthyearFormControl = new FormControl('', [\n    Validators.required\n  ]);\n\n  imgUriFormControl = new FormControl('', [\n    Validators.required,\n    Validators.pattern(/^(http[s]?:\\/\\/){0,1}(www\\.){0,1}[a-zA-Z0-9\\.\\-]+\\.[a-zA-Z]{2,5}[\\.]{0,1}/)\n  ]);\n\n  constructor(\n    private route: ActivatedRoute,\n    private authorService: AuthorService\n  ) { \n    this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\n  }\n\n  ngOnInit() {\n    this.getAuthor()\n  }\n\n  getAuthor(){\n    this.id = this.route.snapshot.paramMap.get('id');\n    return this.authorService.getById(this.id)\n      .subscribe(author => {\n        this.author = author\n        this.name = author.name\n        this.country = author.country\n        this.bio = author.bio\n        this.birthyear = author.birthyear\n        this.imgUri = author.img\n      });\n  }\n\n  editAuthor() {\n    this.authorService.editAuthor(this.currentUser.token, this.id ,this.name,this.country, this.bio, this.birthyear, this.imgUri)\n    .subscribe(\n      data => {\n        this.successMessage = \"Author successfully edited\";\n        this.errorMessage = null;\n      },\n      error => {\n        this.errorMessage = \"The author couldnt be edited, sorry.\";\n        this.successMessage = null;\n    });\n  }\n\n}\n","module.exports = \"h1 {\\r\\n    font-weight: 700;\\r\\n    color: #EEEEEE;\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\ntable {\\r\\n    width: 100%;\\r\\n    margin-bottom: 50px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hdXRob3JvdmVydmlldy9hdXRob3JvdmVydmlldy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGNBQWM7SUFDZCxTQUFTO0FBQ2I7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsbUJBQW1CO0FBQ3ZCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9hdXRob3JvdmVydmlldy9hdXRob3JvdmVydmlldy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaDEge1xyXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgIGNvbG9yOiAjRUVFRUVFO1xyXG4gICAgbWFyZ2luOiAwO1xyXG59XHJcblxyXG50YWJsZSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIG1hcmdpbi1ib3R0b206IDUwcHg7XHJcbn0iXX0= */\"","module.exports = \"<app-header></app-header>\\n\\n<h1>Authors</h1>\\n<p *ngIf=\\\"errorMessage\\\" class=\\\"errMsg\\\">{{errorMessage}}</p>\\n<p *ngIf=\\\"successMessage\\\" class=\\\"successMsg\\\">{{successMessage}}</p>\\n<table mat-table [dataSource]=\\\"list\\\" matSort class=\\\"mat-elevation-z1\\\">\\n    <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\n    </ng-container>\\n    \\n    <ng-container matColumnDef=\\\"bio\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Bio </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.bio}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"delete\\\">\\n        <th mat-header-cell *matHeaderCellDef></th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> <a mat-flat-button (click)=\\\"deleteAuthor(element._id)\\\" class=\\\"warning-btn\\\">Delete</a></td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"details\\\">\\n        <th mat-header-cell *matHeaderCellDef>  <a mat-flat-button routerLink=\\\"/authorcreate\\\" class=\\\"success-btn\\\">Create</a></th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> <a mat-flat-button routerLink=\\\"/authoredit/{{element._id}}\\\"color=\\\"primary\\\">Edit</a></td>\\n    </ng-container>\\n    \\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n</table>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { AuthorService } from 'src/app/services/author.service';\nimport { MatTableDataSource, MatSort } from '@angular/material';\nimport { Observable } from 'rxjs';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Component({\n  selector: 'app-authoroverview',\n  templateUrl: './authoroverview.component.html',\n  styleUrls: ['./authoroverview.component.css']\n})\nexport class AuthoroverviewComponent implements OnInit {\n\n  displayedColumns: string[] = ['name', 'bio', 'delete', 'details'];\n  list: any;\n\n  currentUser: any;\n\n  errorMessage: String;\n  successMessage: String;\n\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(private authorService:AuthorService) {\n    this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\n   }\n\n  ngOnInit() {\n    this.getAll();\n  }\n\n  getAll(): void {\n    this.authorService.getAll()\n      .subscribe(authors => {\n        this.list = new MatTableDataSource(authors);\n      })\n  }\n\n  deleteAuthor(authorId:string) {\n    this.authorService.deleteAuthor(this.currentUser.token, authorId)\n    .subscribe(\n      data => {\n        this.successMessage = \"The author has been removed.\";\n        this.errorMessage = null;\n        this.getAll();\n      },\n      error => {\n        this.errorMessage = \"The author couldn't be removed\";\n        this.successMessage = null;\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYm9vay9ib29rLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-header></app-header>\\n<mat-card class=\\\"announcement\\\">\\n  <img src=\\\"{{book.img}}\\\" mat-card-image>\\n  <h1 class=\\\"mat-headline\\\">{{book.name | uppercase }}</h1>\\n</mat-card>\\n<mat-card>\\n    <h3>Details:</h3>\\n    <p>{{book.description}}</p>\\n    <br>\\n    <p>Publisher: {{book.publisher.name}}</p>\\n    <p>Genr: {{book.genre}}</p>\\n    <p>Release date: {{book.publishdate}}</p>\\n    <p>Language: {{book.language}}</p>\\n\\n    \\n\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { BookService } from 'src/app/services/book.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { Book } from 'src/app/models/Book';\nimport { Observable } from 'rxjs';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { LoginService } from 'src/app/services/login.service';\n\n@Component({\n  selector: 'app-book',\n  templateUrl: './book.component.html',\n  styleUrls: ['./book.component.css']\n})\nexport class BookComponent implements OnInit {\n\n  book: Book;\n  currentUser: any;\n  isLoggedIn$: Observable<boolean>;\n  helper: JwtHelperService = new JwtHelperService();\n  decodedToken: String;\n\n  constructor(\n    private route: ActivatedRoute,\n    private bookService: BookService,\n    private location: Location,\n    private loginService : LoginService\n  ) {\n    this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\n   }\n\n  ngOnInit() {\n    this.isLoggedIn$ = this.loginService.isLoggedIn;\n    \n    if(this.currentUser != undefined){\n      this.decodedToken = this.helper.decodeToken(this.currentUser.token);\n      console.log(this.decodedToken)\n    }\n    this.getBook();\n  }\n\n  getBook(): void {\n    const id = this.route.snapshot.paramMap.get('id');\n    this.bookService.getById(id)\n    .subscribe(book => this.book = book);\n  }\n\n}\n","module.exports = \"mat-card {\\r\\n    flex-direction: column;\\r\\n    width: 100%;\\r\\n    margin-bottom: 50px;\\r\\n    box-sizing: border-box;\\r\\n  }\\r\\n  \\r\\n  mat-card > * {\\r\\n    width: 100%;\\r\\n    box-sizing: border-box;\\r\\n  }\\r\\n  \\r\\n  mat-grid-tile {\\r\\n    width: calc(50% - 25px) !important;\\r\\n  }\\r\\n  \\r\\n  mat-grid-tile:nth-child(2) {\\r\\n    left: calc(50% + 25px) !important;\\r\\n  }\\r\\n  \\r\\n  mat-grid-tile > * {\\r\\n    width: 100%;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9ib29rZWRpdG9yL2Jvb2tlZGl0b3IuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHNCQUFzQjtJQUN0QixXQUFXO0lBQ1gsbUJBQW1CO0lBQ25CLHNCQUFzQjtFQUN4Qjs7RUFFQTtJQUNFLFdBQVc7SUFDWCxzQkFBc0I7RUFDeEI7O0VBRUE7SUFDRSxrQ0FBa0M7RUFDcEM7O0VBRUE7SUFDRSxpQ0FBaUM7RUFDbkM7O0VBRUE7SUFDRSxXQUFXO0VBQ2IiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2Jvb2tlZGl0b3IvYm9va2VkaXRvci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWNhcmQge1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNTBweDtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgfVxyXG4gIFxyXG4gIG1hdC1jYXJkID4gKiB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgfVxyXG5cclxuICBtYXQtZ3JpZC10aWxlIHtcclxuICAgIHdpZHRoOiBjYWxjKDUwJSAtIDI1cHgpICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG5cclxuICBtYXQtZ3JpZC10aWxlOm50aC1jaGlsZCgyKSB7XHJcbiAgICBsZWZ0OiBjYWxjKDUwJSArIDI1cHgpICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG5cclxuICBtYXQtZ3JpZC10aWxlID4gKiB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9Il19 */\"","module.exports = \"<app-header></app-header>\\n\\n<mat-card>\\n  <h2>{{book.author.name}}</h2>\\n  <h2>{{book.publisher.name}}</h2>\\n  <p *ngIf=\\\"errorMessage\\\" class=\\\"errMsg\\\">{{errorMessage}}</p>\\n  <p *ngIf=\\\"successMessage\\\" class=\\\"successMsg\\\">{{successMessage}}</p>\\n\\n  <mat-form-field>\\n    <input [formControl]=\\\"nameFormControl\\\" matInput name=\\\"name\\\" [(ngModel)]=\\\"name\\\" placeholder=\\\"name\\\" required>\\n    <mat-error *ngIf=\\\"nameFormControl.hasError('required')\\\">\\n      name is <strong>required</strong>\\n      </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <input [formControl]=\\\"descriptionFormControl\\\" matInput name=\\\"description\\\" [(ngModel)]=\\\"description\\\" placeholder=\\\"description\\\" required>\\n    <mat-error *ngIf=\\\"descriptionFormControl.hasError('required')\\\">\\n      description is <strong>required</strong>\\n      </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <input [formControl]=\\\"genreFormControl\\\" matInput name=\\\"genre\\\" [(ngModel)]=\\\"genre\\\" placeholder=\\\"genre\\\" required>\\n    <mat-error *ngIf=\\\"birthyearFormControl.hasError('required')\\\">\\n      genre is <strong>required</strong>\\n      </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <input [formControl]=\\\"languageFormControl\\\" matInput name=\\\"language\\\" [(ngModel)]=\\\"language\\\" placeholder=\\\"language\\\" required>\\n    <mat-error *ngIf=\\\"languageFormControl.hasError('required')\\\">\\n      language is <strong>required</strong>\\n      </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <input [formControl]=\\\"publishdateFormControl\\\" matInput name=\\\"publishdate\\\" [(ngModel)]=\\\"publishdate\\\" placeholder=\\\"publishdate\\\" required>\\n    <mat-error *ngIf=\\\"birthyearFormControl.hasError('required')\\\">\\n      publishdate is <strong>required</strong>\\n      </mat-error>\\n  </mat-form-field>\\n\\n\\n\\n\\n  <mat-form-field>\\n    <input [formControl]=\\\"imgUriFormControl\\\" matInput name=\\\"imgUri\\\" [(ngModel)]=\\\"imgUri\\\" placeholder=\\\"Image Uri\\\" required>\\n    <mat-error *ngIf=\\\"imgUriFormControl.hasError('pattern') && !imgUrlFormControl.hasError('required')\\\">\\n        Please enter a valid Image URI (example: 'http://example.com/i/img.png').\\n      </mat-error>\\n      <mat-error *ngIf=\\\"imgUriFormControl.hasError('required')\\\">\\n        Image URI is <strong>required</strong>\\n      </mat-error>\\n  </mat-form-field>\\n\\n  <button mat-button (click)=\\\"editBook()\\\" color=\\\"warn\\\">Edit</button>\\n\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AuthorService } from 'src/app/services/author.service';\nimport { PublisherService } from 'src/app/services/publisher.service';\nimport { BookService } from 'src/app/services/book.service';\nimport { Book } from 'src/app/models/Book';\nimport { Author } from 'src/app/models/Author';\nimport { Publisher } from 'src/app/models/Publisher';\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-bookeditor',\n  templateUrl: './bookeditor.component.html',\n  styleUrls: ['./bookeditor.component.css']\n})\nexport class BookeditorComponent implements OnInit {\n\n    id: string;\n    book: Book;\n    name: string;\n    description: string;\n    genre: string;\n    language: string;\n    publishdate:string;\n    image:string;\n\n\n    /*\n\n    _id: string;\n    author: Author;\n    publisher: Publisher;\n    name: string;\n    description: string;\n    genre: string;\n    language: string;\n    publishdate:string;\n    image:string;\n\n\n    */\n\n  currentUser: any;\n  errorMessage: String;\n  successMessage: String;\n\n  nameFormControl = new FormControl('', [\n    Validators.required\n  ]);\n\n  descriptionFormControl = new FormControl('', [\n    Validators.required\n  ]);\n\n  genreFormControl = new FormControl('', [\n    Validators.required\n  ]);\n\n  languageFormControl = new FormControl('', [\n    Validators.required\n  ]);\n\n  publishdateFormControl = new FormControl('', [\n    Validators.required\n  ]);\n\n  imageFormControl = new FormControl('', [\n    Validators.required\n  ]);\n\n\n  constructor(\n    private route: ActivatedRoute,\n    private bookService: BookService\n  ) { \n    this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\n  }\n\n  ngOnInit() {\n    this.getBook()\n  }\n\n  getBook(){\n    this.id = this.route.snapshot.paramMap.get('id');\n    return this.bookService.getById(this.id)\n      .subscribe(book => {\n        this.book = book\n        this.name = book.name\n        this.genre = book.genre\n        this.language = book.language\n        this.description= book.description\n        this.publishdate = book.publishdate\n        this.image = book.image\n      });\n  }\n\n\n\n  //sig: token: string, id:string, name: string, description: string, genre: string, language: string, publishdate : string, image : string\n  editBook() {\n    this.bookService.editBook(this.currentUser.token, this.id,  this.name, this.description, this.genre, this.language, this.publishdate, this.image)\n    .subscribe(\n      data => {\n        this.successMessage = \"book has been edited\";\n        this.errorMessage = null;\n      },\n      error => {\n        this.errorMessage = \"book couldnt be edited\";\n        this.successMessage = null;\n    });\n  }\n\n}\n","module.exports = \"table {\\r\\n    width: 100%;\\r\\n    margin-bottom: 50px;\\r\\n}\\r\\n\\r\\nh1 {\\r\\n    font-weight: 700;\\r\\n    color: #EEEEEE;\\r\\n    margin: 0;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9ib29rb3ZlcnZpZXcvYm9va292ZXJ2aWV3LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0lBQ1gsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGNBQWM7SUFDZCxTQUFTO0FBQ2IiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2Jvb2tvdmVydmlldy9ib29rb3ZlcnZpZXcuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNTBweDtcclxufVxyXG5cclxuaDEge1xyXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgIGNvbG9yOiAjRUVFRUVFO1xyXG4gICAgbWFyZ2luOiAwO1xyXG59Il19 */\"","module.exports = \"<app-header></app-header>\\n<h1>Catalog:</h1>\\n<p *ngIf=\\\"errorMessage\\\" class=\\\"errMsg\\\">{{errorMessage}}</p>\\n<p *ngIf=\\\"successMessage\\\" class=\\\"successMsg\\\">{{successMessage}}</p>\\n\\n<table mat-table [dataSource]=\\\"schedule\\\" matSort class=\\\"mat-elevation-z1\\\" matSortActive=\\\"name\\\" matSortDirection=\\\"asc\\\">\\n\\n    <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef> Title </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\n    </ng-container>\\n    \\n\\n    <ng-container matColumnDef=\\\"author\\\">\\n        <th mat-header-cell *matHeaderCellDef> Author </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.author.name}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"publisher\\\">\\n        <th mat-header-cell *matHeaderCellDef> Publisher </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.publisher.name}} </td>\\n    </ng-container>\\n\\n\\n\\n    \\n    <!-- 'name', 'author','publisher', 'genre', 'language', 'publishdate', 'image' -->\\n\\n    <ng-container matColumnDef=\\\"delete\\\">\\n        <th mat-header-cell *matHeaderCellDef></th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> <a mat-flat-button (click)=\\\"deleteBook(element._id)\\\" class=\\\"warning-btn\\\">Delete</a></td>\\n    </ng-container>\\n\\n\\n    <ng-container matColumnDef=\\\"details\\\">\\n        <th mat-header-cell *matHeaderCellDef> <a mat-flat-button routerLink=\\\"/home\\\" class=\\\"success-btn\\\">Create</a> </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> <a mat-flat-button routerLink=\\\"/bookedit/{{element._id}}\\\" color=\\\"primary\\\">Edit</a></td>\\n    </ng-container>\\n\\n\\n    \\n    \\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n</table>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSort, MatTableDataSource } from '@angular/material';\nimport { BookService } from 'src/app/services/book.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Observable } from 'rxjs';\nimport { LoginService } from 'src/app/services/login.service';\nimport { ActivatedRoute } from '@angular/router';\n\n\n@Component({\n  selector: 'app-bookoverview',\n  templateUrl: './bookoverview.component.html',\n  styleUrls: ['./bookoverview.component.css']\n})\nexport class BookoverviewComponent implements OnInit {\n\n  displayedColumns: string[] = ['name', 'author','publisher', 'delete', 'details'];\n\n  /*\n author: Author;\n    name: string;\n    description: string;\n    genre: string;\n    language: string;\n    publishdate:string;\n    image:string;\n    publisher:Publisher;\n\n  */\n  schedule : any;\n\n  @ViewChild(MatSort) sort: MatSort;\n\n  currentUser: any;\n  isLoggedIn$: Observable<boolean>;\n  helper: JwtHelperService = new JwtHelperService();\n  decodedToken: any;\n\n  errorMessage: String;\n  successMessage: String;\n\n  constructor(\n    private bookService: BookService\n    ){\n      this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    }\n\n  ngOnInit() {\n    this.getAll();\n  }\n\n  getAll() {\n    this.bookService.getAll()\n        .subscribe(books => {\n          this.schedule = new MatTableDataSource(books);\n          this.schedule.sort = this.sort;\n        })\n  }\n\n  deleteBook(bookId:string) {\n    this.bookService.delete(this.currentUser.token, bookId)\n    .subscribe(\n      data => {\n        this.successMessage = \"Book deleted, you cannot reverse this change.\";\n        this.errorMessage = null;\n        this.getAll();\n      },\n      error => {\n        this.errorMessage = \"This book could not be removed.\";\n        this.successMessage = null;\n    });\n  }\n\n}\n","module.exports = \"h4 {\\n    font-size: 12px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9mb290ZXIvZm9vdGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxlQUFlO0FBQ25CIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9mb290ZXIvZm9vdGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJoNCB7XG4gICAgZm9udC1zaXplOiAxMnB4O1xufSJdfQ== */\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n    <h4>&copy; OpenWebCatalog by Jöran Hompesch</h4>\\n</mat-toolbar>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"mat-toolbar {\\n    margin-bottom: 50px;\\n    background: #16003f;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9oZWFkZXIvaGVhZGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxtQkFBbUI7SUFDbkIsbUJBQW1CO0FBQ3ZCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9oZWFkZXIvaGVhZGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtdG9vbGJhciB7XG4gICAgbWFyZ2luLWJvdHRvbTogNTBweDtcbiAgICBiYWNrZ3JvdW5kOiAjMTYwMDNmO1xufSJdfQ== */\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n  <button mat-button routerLink=\\\"/home\\\">Home</button>\\n  <button mat-button routerLink=\\\"/agenda\\\">Collection</button>\\n  <!-- When you're not logged in -->\\n  <button mat-button [matMenuTriggerFor]=\\\"loginOptions\\\" *ngIf=\\\"!(isLoggedIn$ | async)\\\" >Login</button>\\n  <!-- When you're logged in.-->\\n  <button mat-button [matMenuTriggerFor]=\\\"accountOptions\\\" *ngIf=\\\"isLoggedIn$ | async\\\" >My Account</button>\\n  <button mat-button [matMenuTriggerFor]=\\\"adminOptions\\\" *ngIf=\\\"(isLoggedIn$ | async)\\\" >Advanced view</button>\\n  <button mat-button (click)=\\\"onLogout()\\\" *ngIf=\\\"isLoggedIn$ | async\\\"> Logout</button>\\n\\n  <mat-menu #loginOptions=\\\"matMenu\\\">\\n    <button mat-menu-item routerLink=\\\"/login\\\">Login</button>\\n    <button mat-menu-item routerLink=\\\"/register\\\">Register</button>\\n  </mat-menu>\\n\\n  <mat-menu #accountOptions=\\\"matMenu\\\">\\n    <button mat-menu-item routerLink=\\\"/userdetails\\\">My Account</button>\\n  </mat-menu>\\n\\n  <mat-menu #adminOptions=\\\"matMenu\\\">\\n    <button mat-menu-item routerLink=\\\"/bookschema\\\">Books</button>\\n    <button mat-menu-item routerLink=\\\"/authorschema\\\">Authors</button>\\n    <button mat-menu-item routerLink=\\\"/publisherschema\\\">Publishers</button>\\n  </mat-menu>\\n</mat-toolbar>\"","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { LoginService } from '../../services/login.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  currentUser: any;\n  isLoggedIn$: Observable<boolean>;\n  helper: JwtHelperService = new JwtHelperService();\n  decodedToken: String;\n\n  constructor(\n    private loginService : LoginService\n  ) {\n    this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\n   }\n\n  ngOnInit() {\n    this.isLoggedIn$ = this.loginService.isLoggedIn;\n    \n    if(this.currentUser != undefined){\n      this.decodedToken = this.helper.decodeToken(this.currentUser.token);\n    }\n  }\n\n  onLogout(){\n    this.loginService.logout();\n  }\n  \n\n}\n","module.exports = \"table {\\r\\n    width: 100%;\\r\\n    margin-bottom: 50px;\\r\\n}\\r\\n\\r\\nh1 {\\r\\n    font-weight: 700;\\r\\n    color: #EEEEEE;\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\n.announcement {\\r\\n    margin-bottom: 50px;\\r\\n}\\r\\n\\r\\n.announcement > h1 {\\r\\n    color: rgba(0,0,0,.87);\\r\\n}\\r\\n\\r\\n.announcement > img {\\r\\n    max-height: 540px;\\r\\n    height: 540px;\\r\\n    -o-object-fit: cover;\\r\\n       object-fit: cover;\\r\\n    -o-object-position: 0 0;\\r\\n       object-position: 0 0;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9ob21lL2hvbWUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCxtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsY0FBYztJQUNkLFNBQVM7QUFDYjs7QUFFQTtJQUNJLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLHNCQUFzQjtBQUMxQjs7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQixhQUFhO0lBQ2Isb0JBQWlCO09BQWpCLGlCQUFpQjtJQUNqQix1QkFBb0I7T0FBcEIsb0JBQW9CO0FBQ3hCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9ob21lL2hvbWUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNTBweDtcclxufVxyXG5cclxuaDEge1xyXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgIGNvbG9yOiAjRUVFRUVFO1xyXG4gICAgbWFyZ2luOiAwO1xyXG59XHJcblxyXG4uYW5ub3VuY2VtZW50IHtcclxuICAgIG1hcmdpbi1ib3R0b206IDUwcHg7XHJcbn1cclxuXHJcbi5hbm5vdW5jZW1lbnQgPiBoMSB7XHJcbiAgICBjb2xvcjogcmdiYSgwLDAsMCwuODcpO1xyXG59XHJcblxyXG4uYW5ub3VuY2VtZW50ID4gaW1nIHtcclxuICAgIG1heC1oZWlnaHQ6IDU0MHB4O1xyXG4gICAgaGVpZ2h0OiA1NDBweDtcclxuICAgIG9iamVjdC1maXQ6IGNvdmVyO1xyXG4gICAgb2JqZWN0LXBvc2l0aW9uOiAwIDA7XHJcbn0iXX0= */\"","module.exports = \"<app-header></app-header>\\n\\n\\n<div *ngIf=\\\"dbook\\\">\\n    <h1>Editors' choice</h1>\\n    <mat-card class=\\\"announcement\\\">\\n        <img src=\\\"{{dbook.img}}\\\" mat-card-image>\\n        <h1 class=\\\"mat-headline\\\"><a routerLink=\\\"/book/{{ dbook._id }}\\\">{{dbook.name | uppercase }} | {{dbook.genre | uppercase }} |  {{dbook.author.name | uppercase }} </a></h1>\\n    </mat-card>\\n</div>\\n\\n<div *ngIf=\\\"!(dbook)\\\">\\n    <h1>Sadly no books are available at this moment.</h1>\\n    <mat-card>\\n        Please add one or come back at a later time!\\n    </mat-card>\\n</div>\\n\\n<div *ngIf=\\\"schedule\\\">\\n    <h1>Top viewed</h1>\\n    <table mat-table [dataSource]=\\\"schedule\\\" matSort class=\\\"mat-elevation-z1\\\" matSortActive=\\\"name\\\" matSortDirection=\\\"asc\\\">\\n        <!-- Position Column -->\\n        <ng-container matColumnDef=\\\"name\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\n            <a routerLink=\\\"/book/{{ dbook._id }}\\\"> </a>\\n        </ng-container>\\n        \\n        <!-- Name Column -->\\n        <ng-container matColumnDef=\\\"author\\\">\\n            <th mat-header-cell *matHeaderCellDef> Author </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.author.name}} </td>\\n        </ng-container>\\n        \\n        <!-- Weight Column -->\\n        <ng-container matColumnDef=\\\"genre\\\">\\n            <th mat-header-cell *matHeaderCellDef> Genre </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.genre}} </td>\\n        </ng-container>\\n        \\n        <!-- Symbol Column -->\\n        <ng-container matColumnDef=\\\"publisher\\\">\\n            <th mat-header-cell *matHeaderCellDef> publisher </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.publisher.name}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"details\\\">\\n            <th mat-header-cell *matHeaderCellDef> details </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> <a mat-flat-button color=\\\"primary\\\" routerLink=\\\"/book/{{ element._id }}\\\">Details</a></td>\\n        </ng-container>\\n\\n        \\n        \\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n    </table>\\n</div>\\n\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport {MatSort, MatTableDataSource} from '@angular/material';\nimport { BookService } from '../../services/book.service';\nimport { Book } from 'src/app/models/Book';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit{\n  displayedColumns: string[] = ['name', 'genre', 'publisher', 'author', 'details'];\n  schedule : any;\n  dbook: Book;\n\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(private bookService: BookService){}\n\n  ngOnInit() {\n    this.getFive();\n    this.getPopular();\n  }\n\n  getFive(): void {\n    this.bookService.getFive()\n        .subscribe(books => {\n          this.schedule = new MatTableDataSource(books);\n          this.schedule.sort = this.sort;\n        })\n  }\n\n  getPopular(): void{\n    this.bookService.getPopular()\n        .subscribe(books => {\n          this.dbook = books;\n        })\n  }\n}\n","module.exports = \"mat-card {\\n    flex-direction: column;\\n    width: 100%;\\n    box-sizing: border-box;\\n  }\\n  \\n  mat-card > * {\\n    width: 100%;\\n    box-sizing: border-box;\\n  }\\n  \\n  mat-grid-tile {\\n    width: calc(50% - 25px) !important;\\n    box-sizing: border-box;\\n  }\\n  \\n  mat-grid-tile:nth-child(2) {\\n    left: calc(50% + 25px) !important;\\n    box-sizing: border-box;\\n  }\\n  \\n  mat-grid-tile > * {\\n    width: 100%;\\n    box-sizing: border-box;\\n  }\\n  \\n  .mat-form-field {\\n    width: 100%;\\n  }\\n  \\n  h1 {\\n    font-weight: 700;\\n    color: #EEEEEE;\\n    margin: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksc0JBQXNCO0lBQ3RCLFdBQVc7SUFDWCxzQkFBc0I7RUFDeEI7O0VBRUE7SUFDRSxXQUFXO0lBQ1gsc0JBQXNCO0VBQ3hCOztFQUVBO0lBQ0Usa0NBQWtDO0lBQ2xDLHNCQUFzQjtFQUN4Qjs7RUFFQTtJQUNFLGlDQUFpQztJQUNqQyxzQkFBc0I7RUFDeEI7O0VBRUE7SUFDRSxXQUFXO0lBQ1gsc0JBQXNCO0VBQ3hCOztFQUVBO0lBQ0UsV0FBVztFQUNiOztFQUVBO0lBQ0UsZ0JBQWdCO0lBQ2hCLGNBQWM7SUFDZCxTQUFTO0FBQ2IiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtY2FyZCB7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICB9XG4gIFxuICBtYXQtY2FyZCA+ICoge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIH1cblxuICBtYXQtZ3JpZC10aWxlIHtcbiAgICB3aWR0aDogY2FsYyg1MCUgLSAyNXB4KSAhaW1wb3J0YW50O1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIH1cblxuICBtYXQtZ3JpZC10aWxlOm50aC1jaGlsZCgyKSB7XG4gICAgbGVmdDogY2FsYyg1MCUgKyAyNXB4KSAhaW1wb3J0YW50O1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIH1cblxuICBtYXQtZ3JpZC10aWxlID4gKiB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgfVxuXG4gIC5tYXQtZm9ybS1maWVsZCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cblxuICBoMSB7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICBjb2xvcjogI0VFRUVFRTtcbiAgICBtYXJnaW46IDA7XG59Il19 */\"","module.exports = \"<app-header></app-header>\\n<h1>LOGIN</h1>\\n<mat-card>\\n  <form class=\\\"loginForm\\\">\\n    <table cellspacing=\\\"0\\\" width=\\\"100%\\\">\\n      <tr *ngIf=\\\"errorMessage\\\">\\n        <td>\\n            <p class=\\\"errMsg\\\">{{errorMessage}}</p>\\n        </td>\\n      </tr>\\n      <tr *ngIf=\\\"successMessage\\\">\\n          <td>\\n              <p class=\\\"successMsg\\\">{{successMessage}}</p>\\n          </td>\\n        </tr>\\n      <tr>\\n        <td>\\n            <mat-form-field>\\n              <input name=\\\"username\\\" matInput [(ngModel)]=\\\"username\\\" placeholder=\\\"Username\\\" required>\\n            </mat-form-field>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n            <mat-form-field>\\n              <input name=\\\"password\\\" matInput [(ngModel)]=\\\"password\\\" placeholder=\\\"Password\\\" type=\\\"password\\\" required>\\n            </mat-form-field>\\n        </td>\\n      </tr>\\n    </table>\\n    <mat-spinner [style.display]=\\\"showSpinner ? 'block' : 'none'\\\"></mat-spinner>\\n  </form>\\n  <button mat-flat-button (click)=\\\"login()\\\" color=\\\"primary\\\">Login</button>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from 'src/app/services/login.service';\n\nimport {Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private loginService: LoginService){ }\n\n  username: String;\n  password: String;\n  returnUrl: String;\n  errorMessage: String;\n  successMessage: String;\n\n  ngOnInit() {\n    this.loginService.logout();\n\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  login() : void {\n    this.loginService.login(this.username, this.password)\n    .subscribe(\n      data => {\n          this.router.navigate([this.returnUrl]);\n      },\n      error => {\n        this.errorMessage = \"You tried to login with incorrect credentials!\";\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHViY3JlYXRlL3B1YmNyZWF0ZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-header></app-header>\\n<mat-card>\\n  <h2>Create a new publisher</h2>\\n  <p *ngIf=\\\"errorMessage\\\" class=\\\"errMsg\\\">{{errorMessage}}</p>\\n  <p *ngIf=\\\"successMessage\\\" class=\\\"successMsg\\\">{{successMessage}}</p>\\n  <mat-form-field>\\n    <input [formControl]=\\\"nameFormControl\\\" matInput name=\\\"name\\\" [(ngModel)]=\\\"name\\\" placeholder=\\\"Name\\\" required>\\n    <mat-error *ngIf=\\\"nameFormControl.hasError('required')\\\">\\n        Name is <strong>required</strong>\\n      </mat-error>\\n  </mat-form-field>\\n  <mat-form-field>\\n    <input [formControl]=\\\"countryFormControl\\\" matInput name=\\\"country\\\" [(ngModel)]=\\\"country\\\" placeholder=\\\"country\\\" required>\\n    <mat-error *ngIf=\\\"countryFormControl.hasError('required')\\\">\\n      country is <strong>required</strong>\\n      </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <input [formControl]=\\\"cityFormControl\\\" matInput name=\\\"city\\\" [(ngModel)]=\\\"city\\\" placeholder=\\\"city\\\" required>\\n    <mat-error *ngIf=\\\"birthyearFormControl.hasError('required')\\\">\\n      city is <strong>required</strong>\\n      </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <input [formControl]=\\\"addressFormControl\\\" matInput name=\\\"address\\\" [(ngModel)]=\\\"address\\\" placeholder=\\\"address\\\" required>\\n    <mat-error *ngIf=\\\"addressFormControl.hasError('required')\\\">\\n      address is <strong>required</strong>\\n      </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <input [formControl]=\\\"emailFormControl\\\" matInput name=\\\"email\\\" [(ngModel)]=\\\"email\\\" placeholder=\\\"emai\\\" required>\\n    <mat-error *ngIf=\\\"emailFormControl.hasError('required')\\\">\\n      emai is <strong>required</strong>\\n      </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <input [formControl]=\\\"phoneFormControl\\\" matInput name=\\\"phone\\\" [(ngModel)]=\\\"phone\\\" placeholder=\\\"phone\\\" required>\\n    <mat-error *ngIf=\\\"phoneFormControl.hasError('required')\\\">\\n      phone is <strong>required</strong>\\n      </mat-error>\\n  </mat-form-field>\\n\\n  \\n\\n\\n  <button mat-flat-button (click)=\\\"createPublisher()\\\" color=\\\"primary\\\">Create Publisher</button>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { PublisherService } from 'src/app/services/publisher.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-pubcreate',\n  templateUrl: './pubcreate.component.html',\n  styleUrls: ['./pubcreate.component.css']\n})\nexport class PubcreateComponent implements OnInit {\n\n  name: string;\n  country: string;\n  city: string;\n  address:string;\n  email:string;\n  phone:string;\n\n  currentUser: any;\n  errorMessage: String;\n  successMessage: String;\n\n  nameFormControl = new FormControl('', [\n    Validators.required\n  ]);\n\n  cityFormControl = new FormControl('', [\n    Validators.required\n  ]);\n\n  countryFormControl = new FormControl('', [\n    Validators.required\n  ]);\n\n  emailFormControl = new FormControl('', [\n    Validators.required\n  ]);\n\n  phoneFormControl = new FormControl('', [\n    Validators.required\n  ]);\n\n  addressFormControl = new FormControl('', [\n    Validators.required\n  ]);\n\n\n  constructor(\n    private router: Router,\n    private publisherService: PublisherService\n  ) { \n    this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\n  }\n\n  ngOnInit() {\n  }\n\n  createPublisher() {\n    this.publisherService.createPublisher(this.currentUser.token, this.name, this.country, this.city, this.address, this.email, this.phone)\n    .subscribe(\n      data => {\n        this.router.navigate(['publisherschema']);\n      },\n      error => {\n        this.errorMessage = \"Fatal error occured, publisher could not be created\";\n        this.successMessage = null;\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHViZWRpdC9wdWJlZGl0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-header></app-header>\\n<mat-card>\\n  <h2>{{name}}</h2>\\n  <p *ngIf=\\\"errorMessage\\\" class=\\\"errMsg\\\">{{errorMessage}}</p>\\n  <p *ngIf=\\\"successMessage\\\" class=\\\"successMsg\\\">{{successMessage}}</p>\\n  <mat-form-field>\\n    <input [formControl]=\\\"nameFormControl\\\" matInput name=\\\"name\\\" [(ngModel)]=\\\"name\\\" value=\\\"{{name}}\\\" required>\\n    <mat-error *ngIf=\\\"nameFormControl.hasError('required')\\\">\\n        Name is <strong>required</strong>\\n      </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <input matInput [formControl]=\\\"countryFormControl\\\" name=\\\"country\\\" [(ngModel)]=\\\"country\\\" value=\\\"{{country}}\\\" required>\\n    <mat-error *ngIf=\\\"countryFormControl.hasError('required')\\\">\\n        Genre is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n\\n  <mat-form-field>\\n    <input matInput [formControl]=\\\"cityFormControl\\\" name=\\\"city\\\" [(ngModel)]=\\\"city\\\" value=\\\"{{city}}\\\" required>\\n    <mat-error *ngIf=\\\"cityFormControl.hasError('required')\\\">\\n        City is <strong>required</strong>\\n      </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <input matInput [formControl]=\\\"addressFormControl\\\" name=\\\"address\\\" [(ngModel)]=\\\"address\\\" value=\\\"{{address}}\\\" required>\\n    <mat-error *ngIf=\\\"addressFormControl.hasError('required')\\\">\\n      address is <strong>required</strong>\\n      </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <input matInput [formControl]=\\\"emailFormControl\\\" name=\\\"email\\\" [(ngModel)]=\\\"email\\\" value=\\\"{{email}}\\\" required>\\n    <mat-error *ngIf=\\\"emailFormControl.hasError('required')\\\">\\n      email is <strong>required</strong>\\n      </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <input matInput [formControl]=\\\"phoneFormControl\\\" name=\\\"phone\\\" [(ngModel)]=\\\"phone\\\" value=\\\"{{phone}}\\\" required>\\n    <mat-error *ngIf=\\\"phoneFormControl.hasError('required')\\\">\\n      phone is <strong>required</strong>\\n      </mat-error>\\n  </mat-form-field>\\n\\n\\n  \\n\\n  \\n  <button mat-flat-button (click)=\\\"editPublisher()\\\" color=\\\"primary\\\">Edit Publisher</button>\\n</mat-card>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { PublisherService } from 'src/app/services/publisher.service';\nimport { Publisher } from 'src/app/models/Publisher';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-pubedit',\n  templateUrl: './pubedit.component.html',\n  styleUrls: ['./pubedit.component.css']\n})\nexport class PubeditComponent implements OnInit {\n\n  name: string;\n  country: string;\n  city: string;\n  address:string;\n  email:string;\n  phone:string;\n  publisher:Publisher;\n  id: string;\n\n  currentUser: any;\n  errorMessage: String;\n  successMessage: String;\n\n  nameFormControl = new FormControl('', [\n    Validators.required\n  ]);\n\n  countryFormControl = new FormControl('', [\n    Validators.required\n  ]);\n\n  cityFormControl = new FormControl('', [\n    Validators.required\n  ]);\n\n  addressFormControl = new FormControl('', [\n    Validators.required\n  ]);\n\n  emailFormControl = new FormControl('', [\n    Validators.required\n  ]);\n\n  phoneFormControl = new FormControl('', [\n    Validators.required\n  ]);\n\n\n\n  constructor(\n    private route: ActivatedRoute,\n    private publisherService: PublisherService\n  ) { \n    this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\n  }\n\n  ngOnInit() {\n    this.getPublisher()\n  }\n\n  getPublisher(){\n    this.id = this.route.snapshot.paramMap.get('id');\n    return this.publisherService.getById(this.id)\n      .subscribe(publisher => {\n        this.publisher = publisher\n        this.name = publisher.name\n        this.country = publisher.country\n        this.city = publisher.city \n        this.address = publisher.address\n        this.email = publisher.email\n        this.phone = publisher.phone\n      });\n  }\n\n  editPublisher() {\n    this.publisherService.editPublisher(this.currentUser.token, this.id ,this.name, this.country, this.city, this.address, this.email, this.phone)\n    .subscribe(\n      data => {\n        this.successMessage = \"Publisheredited\";\n        this.errorMessage = null;\n      },\n      error => {\n        this.errorMessage = \"cant edit publisher ,,,,,,\";\n        this.successMessage = null;\n    });\n  }\n\n}\n","module.exports = \"h1 {\\r\\n    font-weight: 700;\\r\\n    color: #EEEEEE;\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\ntable {\\r\\n    width: 100%;\\r\\n    margin-bottom: 50px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wdWJ2aWV3L3B1YnZpZXcuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtJQUNoQixjQUFjO0lBQ2QsU0FBUztBQUNiOztBQUVBO0lBQ0ksV0FBVztJQUNYLG1CQUFtQjtBQUN2QiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHVidmlldy9wdWJ2aWV3LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJoMSB7XHJcbiAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgY29sb3I6ICNFRUVFRUU7XHJcbiAgICBtYXJnaW46IDA7XHJcbn1cclxuXHJcbnRhYmxlIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNTBweDtcclxufSJdfQ== */\"","module.exports = \"<app-header></app-header>\\n<h1>Publishers:</h1>\\n<p *ngIf=\\\"errorMessage\\\" class=\\\"errMsg\\\">{{errorMessage}}</p>\\n<p *ngIf=\\\"successMessage\\\" class=\\\"successMsg\\\">{{successMessage}}</p>\\n<table mat-table [dataSource]=\\\"list\\\" matSort class=\\\"mat-elevation-z1\\\">\\n\\n\\n    <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\n    </ng-container>\\n    \\n    <ng-container matColumnDef=\\\"country\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Country of origin </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.country}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"email\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Contact E-mail </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.email}} </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"phone\\\">\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Contact Phone-nr </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.phone}} </td>\\n </ng-container>\\n\\n    <ng-container matColumnDef=\\\"delete\\\">\\n        <th mat-header-cell *matHeaderCellDef></th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> <a mat-flat-button (click)=\\\"deletePublisher(element._id)\\\" class=\\\"warning-btn\\\">Delete</a></td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"details\\\">\\n        <th mat-header-cell *matHeaderCellDef>  <a mat-flat-button routerLink=\\\"/publishercreate\\\" class=\\\"success-btn\\\">Create</a></th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> <a mat-flat-button routerLink=\\\"/publisheredit/{{element._id}}\\\"color=\\\"primary\\\">Edit</a></td>\\n    </ng-container>\\n    \\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n</table>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { PublisherService } from 'src/app/services/publisher.service';\nimport { MatTableDataSource, MatSort } from '@angular/material';\nimport { Observable } from 'rxjs';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Component({\n  selector: 'app-pubview',\n  templateUrl: './pubview.component.html',\n  styleUrls: ['./pubview.component.css']\n})\nexport class PubviewComponent implements OnInit {\n\n  displayedColumns: string[] = ['name', 'country', 'email','phone', 'delete', 'details'];\n  list: any;\n\n  currentUser: any;\n\n  errorMessage: String;\n  successMessage: String;\n\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(private publisherService:PublisherService) {\n    this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\n   }\n\n  ngOnInit() {\n    this.getAll();\n  }\n\n  getAll(): void {\n    this.publisherService.getAll()\n      .subscribe(publishers => {\n        this.list = new MatTableDataSource(publishers);\n      })\n  }\n\n  deleteAuthor(publisherId:string) {\n    this.publisherService.deleteAuthor(this.currentUser.token, publisherId)\n    .subscribe(\n      data => {\n        this.successMessage = \"The publisher has been removed\";\n        this.errorMessage = null;\n        this.getAll();\n      },\n      error => {\n        this.errorMessage = \"The publisher cant be removed\";\n        this.successMessage = null;\n    });\n  }\n\n}\n","module.exports = \"mat-card {\\n    flex-direction: column;\\n    width: 100%;\\n    margin-bottom: 50px;\\n    box-sizing: border-box;\\n  }\\n  \\n  mat-card > * {\\n    width: 100%;\\n    box-sizing: border-box;\\n  }\\n  \\n  mat-grid-tile {\\n    width: calc(50% - 25px) !important;\\n  }\\n  \\n  mat-grid-tile:nth-child(2) {\\n    left: calc(50% + 25px) !important;\\n  }\\n  \\n  mat-grid-tile > * {\\n    width: 100%;\\n  }\\n  \\n  h1 {\\n    font-weight: 700;\\n    color: #EEEEEE;\\n    margin: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksc0JBQXNCO0lBQ3RCLFdBQVc7SUFDWCxtQkFBbUI7SUFDbkIsc0JBQXNCO0VBQ3hCOztFQUVBO0lBQ0UsV0FBVztJQUNYLHNCQUFzQjtFQUN4Qjs7RUFFQTtJQUNFLGtDQUFrQztFQUNwQzs7RUFFQTtJQUNFLGlDQUFpQztFQUNuQzs7RUFFQTtJQUNFLFdBQVc7RUFDYjs7RUFFQTtJQUNFLGdCQUFnQjtJQUNoQixjQUFjO0lBQ2QsU0FBUztBQUNiIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWNhcmQge1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luLWJvdHRvbTogNTBweDtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICB9XG4gIFxuICBtYXQtY2FyZCA+ICoge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIH1cblxuICBtYXQtZ3JpZC10aWxlIHtcbiAgICB3aWR0aDogY2FsYyg1MCUgLSAyNXB4KSAhaW1wb3J0YW50O1xuICB9XG5cbiAgbWF0LWdyaWQtdGlsZTpudGgtY2hpbGQoMikge1xuICAgIGxlZnQ6IGNhbGMoNTAlICsgMjVweCkgIWltcG9ydGFudDtcbiAgfVxuXG4gIG1hdC1ncmlkLXRpbGUgPiAqIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuXG4gIGgxIHtcbiAgICBmb250LXdlaWdodDogNzAwO1xuICAgIGNvbG9yOiAjRUVFRUVFO1xuICAgIG1hcmdpbjogMDtcbn0iXX0= */\"","module.exports = \"<app-header></app-header>\\n<h1>REGISTER AN ACCOUNT</h1>\\n<mat-card>\\n  <p *ngIf=\\\"errorMessage\\\" class=\\\"errMsg\\\">{{errorMessage}}</p>\\n  <p *ngIf=\\\"successMessage\\\" class=\\\"successMsg\\\">{{successMessage}}</p>\\n  <mat-form-field>\\n    <input [formControl]=\\\"usernameFormControl\\\" matInput name=\\\"username\\\" [(ngModel)]=\\\"username\\\" placeholder=\\\"Username\\\" required>\\n    <mat-error *ngIf=\\\"usernameFormControl.hasError('required')\\\">\\n        Username is <strong>required</strong>\\n      </mat-error>\\n  </mat-form-field>\\n  <mat-form-field>\\n    <input matInput [formControl]=\\\"passwordFormControl\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\" placeholder=\\\"Password\\\" type=\\\"password\\\" required>\\n    <mat-error *ngIf=\\\"passwordFormControl.hasError('required')\\\">\\n        Password is <strong>required</strong>\\n      </mat-error>\\n  </mat-form-field>\\n  <mat-form-field>\\n    <input matInput [formControl]=\\\"passwordRepeatFormControl\\\" name=\\\"passwordRepeat\\\" [(ngModel)]=\\\"passwordRepeat\\\" placeholder=\\\"Password (repeat)\\\" type=\\\"password\\\" required>\\n    <mat-error *ngIf=\\\"passwordRepeatFormControl.hasError('required')\\\">\\n        Password Repeat is <strong>required</strong>\\n      </mat-error>\\n  </mat-form-field>\\n  <mat-form-field>\\n    <input matInput [formControl]=\\\"nameFormControl\\\" name=\\\"name\\\" [(ngModel)]=\\\"name\\\" placeholder=\\\" name\\\" required>\\n    <mat-error *ngIf=\\\"nameFormControl.hasError('required')\\\">\\n         name is <strong>required</strong>\\n      </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <input matInput [formControl]=\\\"countryFormControl\\\" name=\\\"country\\\" [(ngModel)]=\\\"country\\\" placeholder=\\\"Country\\\" required>\\n    <mat-error *ngIf=\\\"countryFormControl.hasError('required')\\\">\\n        Country is <strong>required</strong>\\n      </mat-error>\\n  </mat-form-field>\\n  <button mat-flat-button (click)=\\\"register()\\\" color=\\\"primary\\\">Register</button>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { LoginService } from 'src/app/services/login.service';\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(\n    private userService: UserService,\n    private loginService: LoginService\n  ) { }\n\n  username: string;\n  password: string;\n  passwordRepeat: string;\n  name: string;\n  country: string;\n\n  returnUrl: String;\n  errorMessage: String;\n  successMessage: String;\n\n  usernameFormControl = new FormControl('', [\n    Validators.required\n  ]);\n\n  passwordFormControl = new FormControl('', [\n    Validators.required\n  ]);\n\n  passwordRepeatFormControl = new FormControl('', [\n    Validators.required\n  ]);\n\n nameFormControl = new FormControl('', [\n    Validators.required\n  ]);\n\n\n  countryFormControl = new FormControl('', [\n    Validators.required\n  ]);\n\n  ngOnInit() {\n    this.loginService.logout();\n  }\n\n  register() : void {\n    if(this.password == this.passwordRepeat){\n      this.userService.register(this.username, this.password, this.name,this.country)\n        .subscribe(\n          data => {\n              this.successMessage = \"Your account has been successfully created! You can now try to login.\"\n              this.errorMessage = null;\n          },\n          error => {\n            this.errorMessage = \"We're sorry, that username has already been taken. Try something else.\";\n            this.successMessage = null;\n        });\n    } else {\n      this.errorMessage = \"We're sorry, the passwords you filled in aren't alike.\";\n      this.successMessage = null;\n    }\n  }\n\n}\n","module.exports = \"mat-card {\\n    flex-direction: column;\\n    width: 100%;\\n    margin-bottom: 50px;\\n    box-sizing: border-box;\\n  }\\n  \\n  mat-card > * {\\n    width: 100%;\\n    box-sizing: border-box;\\n  }\\n  \\n  mat-grid-tile {\\n    width: calc(50% - 25px) !important;\\n  }\\n  \\n  mat-grid-tile:nth-child(2) {\\n    left: calc(50% + 25px) !important;\\n  }\\n  \\n  mat-grid-tile > * {\\n    width: 100%;\\n  }\\n  \\n  h1 {\\n    font-weight: 700;\\n    color: #EEEEEE;\\n    margin: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy91c2VyZGV0YWlsL3VzZXJkZXRhaWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHNCQUFzQjtJQUN0QixXQUFXO0lBQ1gsbUJBQW1CO0lBQ25CLHNCQUFzQjtFQUN4Qjs7RUFFQTtJQUNFLFdBQVc7SUFDWCxzQkFBc0I7RUFDeEI7O0VBRUE7SUFDRSxrQ0FBa0M7RUFDcEM7O0VBRUE7SUFDRSxpQ0FBaUM7RUFDbkM7O0VBRUE7SUFDRSxXQUFXO0VBQ2I7O0VBRUE7SUFDRSxnQkFBZ0I7SUFDaEIsY0FBYztJQUNkLFNBQVM7QUFDYiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlcmRldGFpbC91c2VyZGV0YWlsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtY2FyZCB7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXJnaW4tYm90dG9tOiA1MHB4O1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIH1cbiAgXG4gIG1hdC1jYXJkID4gKiB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgfVxuXG4gIG1hdC1ncmlkLXRpbGUge1xuICAgIHdpZHRoOiBjYWxjKDUwJSAtIDI1cHgpICFpbXBvcnRhbnQ7XG4gIH1cblxuICBtYXQtZ3JpZC10aWxlOm50aC1jaGlsZCgyKSB7XG4gICAgbGVmdDogY2FsYyg1MCUgKyAyNXB4KSAhaW1wb3J0YW50O1xuICB9XG5cbiAgbWF0LWdyaWQtdGlsZSA+ICoge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG5cbiAgaDEge1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgY29sb3I6ICNFRUVFRUU7XG4gICAgbWFyZ2luOiAwO1xufSJdfQ== */\"","module.exports = \"<app-header></app-header>\\n\\n<h1>Account Details</h1>\\n<mat-card>\\n  <p *ngIf=\\\"errorMessage\\\" class=\\\"errMsg\\\">{{errorMessage}}</p>\\n  <p *ngIf=\\\"successMessage\\\" class=\\\"successMsg\\\">{{successMessage}}</p>\\n  <mat-form-field>\\n    <input matInput name=\\\"username\\\" [(ngModel)]=\\\"username\\\" placeholder=\\\"Username\\\" value=\\\"{{user.username}}\\\" disabled>\\n  </mat-form-field>\\n  <mat-form-field>\\n    <input matInput name=\\\"name\\\" [(ngModel)]=\\\"name\\\" placeholder=\\\"name\\\" value=\\\"{{user.name}}\\\" required>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <input matInput name=\\\"country\\\" [(ngModel)]=\\\"country\\\" placeholder=\\\"Country\\\" value=\\\"{{user.country}}\\\" required>\\n  </mat-form-field>\\n  <button mat-flat-button (click)=\\\"changeDetails()\\\" color=\\\"primary\\\">Change details</button>\\n</mat-card>\\n\\n<mat-card>\\n  <h2>Change password</h2>\\n  <h2>Make sure to use keypassX or write it down!</h2>\\n  <mat-form-field>\\n    <input matInput name=\\\"password\\\" [(ngModel)]=\\\"password\\\" placeholder=\\\"Current Password\\\" type=\\\"password\\\"  required>\\n  </mat-form-field>\\n  <mat-form-field>\\n    <input matInput name=\\\"newPassword\\\" [(ngModel)]=\\\"newPassword\\\" placeholder=\\\"New Password\\\" type=\\\"password\\\" required>\\n  </mat-form-field>\\n  <button mat-flat-button (click)=\\\"changePassword()\\\" color=\\\"primary\\\">Change password</button>\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../services/user.service';\nimport { User } from '../../models/User';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-userdetail',\n  templateUrl: './userdetail.component.html',\n  styleUrls: ['./userdetail.component.css']\n})\nexport class UserdetailComponent implements OnInit {\n  currentUser: any;\n  user: User;\n  isLoggedIn$: Observable<boolean>;\n  helper: JwtHelperService = new JwtHelperService();\n  decodedToken: any;\n\n  errorMessage: String;\n  successMessage: String;\n\n  name: string;\n  country: string;\n  password: string;\n  newPassword: string;\n\n  constructor(private userService: UserService) { \n    this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\n  }\n\n  ngOnInit() {\n    this.getUser();\n  }\n\n  getUser(){\n    this.decodedToken = this.helper.decodeToken(this.currentUser.token);\n    return this.userService.getById(this.decodedToken.userId)\n      .subscribe(user => {\n        this.user = user\n        this.name = user.name\n        this.country = user.country\n      });\n  }\n\n  changeDetails(){\n    this.userService.changeDetails(this.currentUser.token, this.name, this.country)\n    .subscribe(\n      data => {\n          this.getUser();\n          this.successMessage = \"Account succesfully edited!!\"\n          this.errorMessage = null;\n      },\n      error => {\n        this.errorMessage = \"Due to an error we were unable to edit your user, please try at a later moment.\";\n        this.successMessage = null;\n    });\n  }\n\n  changePassword(){\n    this.userService.getById(this.decodedToken.userId)\n      .subscribe(user => {\n        if (user.password == this.password){\n          if (this.password !== this.newPassword){\n            this.userService.changePassword(this.currentUser.token, this.password, this.newPassword)\n              .subscribe(\n                data => {\n                    this.getUser();\n                    this.successMessage = \"Your account has been successfully edited!\"\n                    this.errorMessage = null;\n                },\n                error => {\n                  this.errorMessage = \"Due to some difficulties we are unable to change your details, try again.\";\n                  this.successMessage = null;\n              });\n          } else {\n            this.errorMessage = \"Your old and new password are the same, your password hasn't been changed.\";\n            this.successMessage = null;\n          }\n        } else {\n          this.errorMessage = \"The password you've given, isn't the same as the one in our database.\";\n          this.successMessage = null;\n        }\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { \n  ActivatedRouteSnapshot, \n  CanActivate, \n  Router, \n  RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { LoginService } from '../services/login.service';\n\n@Injectable()\nexport class LoginGuard implements CanActivate {\n  constructor(\n    private loginService: LoginService,\n    private router: Router\n  ) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> {\n    return this.loginService.isLoggedIn         // {1}\n      .pipe(\n        take(1),                              // {2} \n        map((isLoggedIn: boolean) => {         // {3}\n          if (!isLoggedIn){\n            console.log('user not logged in')\n            this.router.navigate(['home']);  // {4}\n            return false;\n          }\n          return true;\n        })\n      );\n  }\n}","import {DragDropModule} from '@angular/cdk/drag-drop';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {NgModule} from '@angular/core';\nimport {\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule,\n} from '@angular/material';\n\n@NgModule({\n  exports: [\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    ScrollingModule,\n  ]\n})\nexport class MaterialModule {}","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Author } from '../models/Author';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthorService {\n\n  private authorUrl = 'http://localhost:3000/api/authors';  // URL to web api\n\n  constructor(\n    private http: HttpClient) { }\n\n  getAll(): Observable<Author[]> {\n    return this.http.get<Author[]>(this.authorUrl)\n  }\n\n  getById(id:string): Observable<Author> {\n    return this.http.get<Author>(this.authorUrl+'?id='+id)\n  }\n\n  editAuthor(token: string, id:string ,name: string, country: string, bio: string, birthyear: string, imgLink: string): Observable<Author> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'x-access-token': token\n      })\n    };\n    return this.http.put<Author>(this.authorUrl, { \n      \"id\": id,\n      \"name\": name,\n\t    \"country\": country,\n      \"bio\": bio,\n      \"birthyear\": birthyear,\n\t    \"img\": imgLink}, httpOptions)\n  }\n\n  createAuthor(token: string, name: string, country: string, bio: string, birthyear: string, imgLink: string): Observable<Author> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'x-access-token': token\n      })\n    };\n    return this.http.post<Author>(this.authorUrl, { \n      \"name\": name,\n\t    \"country\": country,\n      \"bio\": bio,\n      \"birthyear\": birthyear,\n\t    \"img\": imgLink}, httpOptions)\n  }\n\n  deleteAuthor(token: string, id: string): Observable<Author> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'x-access-token': token\n      })\n    };\n    return this.http.delete<Author>(this.authorUrl+'?id='+id, httpOptions)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Book } from '../models/Book';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookService {\n\n  private bookUrl = 'http://localhost:3000/api/books';  // URL to web api\n\n  constructor(\n    private http: HttpClient) { }\n\n  getAll (): Observable<Book[]> {\n    return this.http.get<Book[]>(this.bookUrl)\n  }\n\n  getFive (): Observable<Book[]> {\n    return this.http.get<Book[]>(this.bookUrl+'?limit=10')\n  }\n\n  getPopular (): Observable<Book> {\n    return this.http.get<Book>(this.bookUrl+'?limit=1')\n  }\n\n  getById(id:string): Observable<Book> {\n    return this.http.get<Book>(this.bookUrl+'?id='+id)\n  }\n\n  delete(token:string, id:string): Observable<Book> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'x-access-token': token\n      })\n    };\n    return this.http.delete<any>(this.bookUrl+'?id='+id, httpOptions)\n  }\n\n  createBook(token: string, author: string, publisher : string, name: string, description: string, genre: string, language: string, publishdate : string, image : String): Observable<Book> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'x-access-token': token\n      })\n    };\n    return this.http.post<Book>(this.bookUrl, { \n      \"author\": author,\n      \"publisher\" : publisher,\n      \"name\": name,\n      \"description\": description,\n\t    \"genre\": genre,\n      \"language\": language,\n      \"publishdate\" : publishdate,\n      \"img\" : image}, httpOptions)\n  }\n\n  editBook(token: string, id:string, name: string, description: string, genre: string, language: string, publishdate : string, image : string): Observable<Book> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'x-access-token': token\n      })\n    };\n    return this.http.put<Book>(this.bookUrl, { \n      \"id\": id,\n      \"name\": name,\n      \"description\": description,\n\t    \"genre\": genre,\n      \"language\": language,\n      \"publishdate\" : publishdate,\n      \"img\" : image,}, httpOptions)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  private loginUrl = 'http://localhost:3000/api/login';  // URL to web api\n  private loggedIn = new BehaviorSubject<boolean>(false);\n\n  get isLoggedIn() {\n    return this.loggedIn.asObservable();\n  }\n\n  constructor(\n    private http: HttpClient) { }\n\n  login (username: String, password: String): Observable<any> {\n    return this.http.post<any>(this.loginUrl, {\"username\": username, \"password\": password})\n      .pipe(map(user => {\n        // login successful if there's a jwt token in the response\n        if (user && user.token) {\n            // store user details and jwt token in local storage to keep user logged in between page refreshes\n            localStorage.setItem('currentUser', JSON.stringify(user));\n            this.loggedIn.next(true);\n        }\n        return user;\n      }));\n  }\n\n  logout() {\n    localStorage.removeItem('currentUser');\n    this.loggedIn.next(false);\n  }\n\n  \n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Publisher } from '../models/Publisher';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PublisherService {\n\n  private publisherUrl = 'http://localhost:3000/api/publishers';  // web api url\n\n  constructor(\n    private http: HttpClient) { }\n\n  getAll(): Observable<Publisher[]> {\n    return this.http.get<Publisher[]>(this.publisherUrl)\n  }\n\n  getById(id:string): Observable<Publisher> {\n    return this.http.get<Publisher>(this.publisherUrl+'?id='+id)\n  }\n\n  editPublisher(token: string, id:string ,name: string, country: string, city: string, address: string,  email: string, phone: string): Observable<Publisher> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'x-access-token': token\n      })\n    };\n    return this.http.put<Publisher>(this.publisherUrl, { \n      \"id\": id,\n      \"name\": name,\n\t    \"country\": country,\n      \"city\": city,\n      \"address\": address,\n      \"email\": email,\n    \"phone\" : phone}, httpOptions)\n  }\n\n  createPublisher(token: string ,name: string, country: string, city: string, address: string,  email: string, phone: string): Observable<Publisher> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'x-access-token': token\n      })\n    };\n    return this.http.post<Publisher>(this.publisherUrl, { \n      \"name\": name,\n\t    \"country\": country,\n      \"city\": city,\n      \"address\": address,\n      \"email\": email,\n      \"phone\" : phone}, httpOptions)\n  }\n\n  deleteAuthor(token: string, id: string): Observable<Publisher> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'x-access-token': token\n      })\n    };\n    return this.http.delete<Publisher>(this.publisherUrl+'?id='+id, httpOptions)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { User } from '../models/User';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private userUrl = 'http://localhost:3000/api/users';\n\n  constructor(\n    private http: HttpClient) {\n      \n    }\n\n\n  register (username: string, password: string, name: string, country: string): Observable<any> {\n    return this.http.post<any>(this.userUrl, {\"username\": username, \"password\": password, \"name\": name, \"country\": country})\n      .pipe(map(user => {\n        // login successful if there's a jwt token in the response\n        if (user && user.code == 201) {\n            // store user details and jwt token in local storage to keep user logged in between page refreshes\n            return user;\n        } else {\n          return false;\n        }\n      }));\n  }\n\n  getById(id:String): Observable<User> {\n    return this.http.get<User>(this.userUrl+'?id='+id)\n  }\n\n  changeDetails (token: string, name: string, country: string): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'x-access-token': token\n      })\n    };\n    console.log(country)\n    return this.http.put<any>(this.userUrl, {\"name\" : name , \"country\": country}, httpOptions)\n      .pipe(map(user => {\n        // login successful if there's a jwt token in the response\n        if (user && user.code == 201) {\n            // store user details and jwt token in local storage to keep user logged in between page refreshes\n            return user;\n        } else {\n          return false;\n        }\n      }));\n  }\n\n  changePassword (token: string, password: string, newPassword: string): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'x-access-token': token\n      })\n    };\n    return this.http.put<any>(this.userUrl, {\"password\": password, \"newPassword\": newPassword}, httpOptions)\n      .pipe(map(user => {\n        // login successful if there's a jwt token in the response\n        if (user && user.code == 201) {\n            // store user details and jwt token in local storage to keep user logged in between page refreshes\n            return user;\n        } else {\n          return false;\n        }\n      }));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}